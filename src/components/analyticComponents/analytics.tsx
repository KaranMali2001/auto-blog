"use client";

import { PageHeader } from "@/components/layoutComponents/page-header";
import { StatsCard } from "@/components/stats-card";
import { Badge } from "@/components/ui/badge";
import { EmptyState } from "@/components/ui/empty-state";
import type { Blog, stats } from "@/types/index";
import { FileText, FolderGit2, GitCommit, Linkedin, TrendingUp, Twitter } from "lucide-react";
import { useMemo } from "react";

export function AnalyticsPage({ blogs, stats }: { blogs: Blog[]; stats: stats }) {
  // Calculate analytics
  const analytics = useMemo(() => {
    if (!blogs) return null;

    const now = Date.now();
    const oneWeekAgo = now - 7 * 24 * 60 * 60 * 1000;
    const oneMonthAgo = now - 30 * 24 * 60 * 60 * 1000;

    const blogsThisWeek = blogs.filter((b) => b._creationTime >= oneWeekAgo).length;
    const blogsThisMonth = blogs.filter((b) => b._creationTime >= oneMonthAgo).length;

    const platformBreakdown = {
      twitter: blogs.filter((b) => b.platform === "twitter").length,
      linkedin: blogs.filter((b) => b.platform === "linkedin").length,
    };

    const statusBreakdown = {
      completed: blogs.filter((b) => b.status === "completed").length,
      pending: blogs.filter((b) => b.status === "pending").length,
    };

    const autoGenerated = blogs.filter((b) => b.autoGenerated).length;
    const manual = blogs.length - autoGenerated;

    return {
      blogsThisWeek,
      blogsThisMonth,
      platformBreakdown,
      statusBreakdown,
      autoGenerated,
      manual,
    };
  }, [blogs]);

  // Handle no data
  if (!blogs || !analytics) {
    return (
      <div className="flex min-h-screen items-center justify-center p-4">
        <EmptyState icon={<FileText className="h-10 w-10" />} title="No Blogs Yet" description="Start creating blogs to see your analytics and track your progress" />
      </div>
    );
  }

  return (
    <div className="container mx-auto max-w-7xl space-y-8 px-4 py-8">
      {/* Header */}
      <PageHeader title="Analytics" description="Track your blog generation and engagement metrics" />

      {/* Primary Stats */}
      <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-4">
        <StatsCard label="Total Blogs" value={stats?.blogCount ?? blogs.length} icon={<FileText className="h-5 w-5" />} />
        <StatsCard label="This Week" value={analytics.blogsThisWeek} icon={<TrendingUp className="h-5 w-5" />} trend={analytics.blogsThisWeek > 0 ? { value: 12, direction: "up" } : undefined} />
        <StatsCard label="Total Commits" value={stats?.commitCount ?? 0} icon={<GitCommit className="h-5 w-5" />} />
        <StatsCard label="Repositories" value={stats?.repoCount ?? 0} icon={<FolderGit2 className="h-5 w-5" />} />
      </div>

      {/* Breakdown Cards */}
      <div className="grid gap-6 lg:grid-cols-2">
        {/* Platform Breakdown */}
        <div className="rounded-lg border border-border bg-card p-6">
          <h3 className="mb-4 text-lg font-semibold text-card-foreground">Platform Distribution</h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-primary/10 text-primary">
                  <Linkedin className="h-5 w-5" />
                </div>
                <span className="font-medium">LinkedIn</span>
              </div>
              <div className="flex items-center gap-3">
                <Badge variant="default">{analytics.platformBreakdown.linkedin}</Badge>
                <span className="text-sm text-muted-foreground">{blogs.length > 0 ? Math.round((analytics.platformBreakdown.linkedin / blogs.length) * 100) : 0}%</span>
              </div>
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="flex h-10 w-10 items-center justify-center rounded-lg bg-secondary/10 text-secondary">
                  <Twitter className="h-5 w-5" />
                </div>
                <span className="font-medium">Twitter/X</span>
              </div>
              <div className="flex items-center gap-3">
                <Badge variant="secondary">{analytics.platformBreakdown.twitter}</Badge>
                <span className="text-sm text-muted-foreground">{blogs.length > 0 ? Math.round((analytics.platformBreakdown.twitter / blogs.length) * 100) : 0}%</span>
              </div>
            </div>
          </div>
        </div>

        {/* Status Breakdown */}
        <div className="rounded-lg border border-border bg-card p-6">
          <h3 className="mb-4 text-lg font-semibold text-card-foreground">Status Overview</h3>
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <span className="font-medium">Completed</span>
              <div className="flex items-center gap-3">
                <Badge variant="success">{analytics.statusBreakdown.completed}</Badge>
                <span className="text-sm text-muted-foreground">{blogs.length > 0 ? Math.round((analytics.statusBreakdown.completed / blogs.length) * 100) : 0}%</span>
              </div>
            </div>

            <div className="flex items-center justify-between">
              <span className="font-medium">Pending</span>
              <div className="flex items-center gap-3">
                <Badge variant="warning">{analytics.statusBreakdown.pending}</Badge>
                <span className="text-sm text-muted-foreground">{blogs.length > 0 ? Math.round((analytics.statusBreakdown.pending / blogs.length) * 100) : 0}%</span>
              </div>
            </div>

            <div className="mt-6 pt-4 border-t border-border">
              <div className="flex items-center justify-between">
                <span className="font-medium">Auto-generated</span>
                <Badge variant="outline">{analytics.autoGenerated}</Badge>
              </div>
              <div className="mt-3 flex items-center justify-between">
                <span className="font-medium">Manual</span>
                <Badge variant="outline">{analytics.manual}</Badge>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Recent Activity */}
      <div className="rounded-lg border border-border bg-card p-6">
        <h3 className="mb-4 text-lg font-semibold text-card-foreground">Activity Summary</h3>
        <div className="grid gap-6 sm:grid-cols-3">
          <div className="space-y-2">
            <p className="text-sm text-muted-foreground">This Week</p>
            <p className="text-3xl font-bold text-card-foreground">{analytics.blogsThisWeek}</p>
            <p className="text-xs text-muted-foreground">blog posts generated</p>
          </div>
          <div className="space-y-2">
            <p className="text-sm text-muted-foreground">This Month</p>
            <p className="text-3xl font-bold text-card-foreground">{analytics.blogsThisMonth}</p>
            <p className="text-xs text-muted-foreground">blog posts generated</p>
          </div>
          <div className="space-y-2">
            <p className="text-sm text-muted-foreground">Average per Week</p>
            <p className="text-3xl font-bold text-card-foreground">{analytics.blogsThisMonth > 0 ? Math.round(analytics.blogsThisMonth / 4) : 0}</p>
            <p className="text-xs text-muted-foreground">based on last 30 days</p>
          </div>
        </div>
      </div>
    </div>
  );
}
